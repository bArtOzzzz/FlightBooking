// <auto-generated />
using System;
using FlightBooking.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightBooking.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230113083536_FlightBookingMigration")]
    partial class FlightBookingMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlightBooking.Domain.Entities.AirlineEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AirlineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Airlines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5d114b2f-3dd0-4798-91b2-480bb3a51ced"),
                            AirlineName = "Belavia",
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31",
                            Rating = 4.2999999999999998
                        },
                        new
                        {
                            Id = new Guid("078249c5-d887-4e17-966f-bbe1838b36f2"),
                            AirlineName = "American Airlines",
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31",
                            Rating = 4.7000000000000002
                        },
                        new
                        {
                            Id = new Guid("ad13f8da-9fb1-4b78-ae4a-9c5209b9ea8b"),
                            AirlineName = "Airnorth",
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31",
                            Rating = 3.8999999999999999
                        });
                });

            modelBuilder.Entity("FlightBooking.Domain.Entities.AirplaneEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaximumSeats")
                        .HasColumnType("int");

                    b.Property<int>("MaximumWeight")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Airplanes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00bbcc7d-784a-4be4-8f92-3cbe95875e8c"),
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31",
                            MaximumSeats = 525,
                            MaximumWeight = 46750,
                            ModelName = "ATR EVO"
                        },
                        new
                        {
                            Id = new Guid("44033746-83fa-4729-b217-a07cac635358"),
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31",
                            MaximumSeats = 320,
                            MaximumWeight = 32400,
                            ModelName = "CRIAC CR929"
                        },
                        new
                        {
                            Id = new Guid("c4b29207-26bf-4fcf-b082-68013a355703"),
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31",
                            MaximumSeats = 180,
                            MaximumWeight = 22600,
                            ModelName = "Comac C919"
                        },
                        new
                        {
                            Id = new Guid("87cad132-b126-4094-8341-c5c4c050a76c"),
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31",
                            MaximumSeats = 125,
                            MaximumWeight = 35600,
                            ModelName = "Airbus A220"
                        },
                        new
                        {
                            Id = new Guid("e54eea91-63bd-4b8e-acac-cee3c240531a"),
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31",
                            MaximumSeats = 150,
                            MaximumWeight = 22600,
                            ModelName = "Comac C919"
                        },
                        new
                        {
                            Id = new Guid("1bc34e17-572b-45fa-93db-d5d155930fec"),
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31",
                            MaximumSeats = 300,
                            MaximumWeight = 31000,
                            ModelName = "Airbus A350"
                        },
                        new
                        {
                            Id = new Guid("ec992954-1dd0-47ed-9c3a-3d332007664f"),
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31",
                            MaximumSeats = 525,
                            MaximumWeight = 46750,
                            ModelName = "ATR EVO"
                        });
                });

            modelBuilder.Entity("FlightBooking.Domain.Entities.BoardingPassEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BookingExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FlightId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Prise")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isExpired")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("UserId");

                    b.ToTable("BoardingPasses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("73a30765-7117-4ea7-aee1-a64e211d7261"),
                            BookingExpireDate = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = "05-12-23",
                            CreatedTime = "12:17:3",
                            FlightId = new Guid("570ed468-e2e6-4434-885b-918b957c1a4e"),
                            Prise = 778m,
                            UserId = new Guid("0f54863e-733b-47a4-87dd-2fdb494b2cd4"),
                            isExpired = false
                        },
                        new
                        {
                            Id = new Guid("a071cb0d-0646-4878-82fb-df847c9a24ce"),
                            BookingExpireDate = new DateTime(2023, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = "02-06-23",
                            CreatedTime = "08:43:17",
                            FlightId = new Guid("809a16aa-d678-4c27-8981-0e525d140ba8"),
                            Prise = 1661m,
                            UserId = new Guid("0f54863e-733b-47a4-87dd-2fdb494b2cd4"),
                            isExpired = false
                        },
                        new
                        {
                            Id = new Guid("73826c33-1e84-4f44-937d-e45842b51d3f"),
                            BookingExpireDate = new DateTime(2023, 7, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = "07-24-23",
                            CreatedTime = "19:36:16",
                            FlightId = new Guid("05511a7b-3d32-4e15-8479-0d835486fd9e"),
                            Prise = 1672m,
                            UserId = new Guid("997bd07f-65ab-4eca-a95e-3dda96f315de"),
                            isExpired = false
                        },
                        new
                        {
                            Id = new Guid("2d4d18b0-16c6-4438-852c-28b0082e84a9"),
                            BookingExpireDate = new DateTime(2023, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = "03-16-23",
                            CreatedTime = "15:22:48",
                            FlightId = new Guid("1fc32289-4054-4135-891c-38d104c23043"),
                            Prise = 1401m,
                            UserId = new Guid("40e28ec4-a526-4330-b333-d70627c2d8ef"),
                            isExpired = false
                        });
                });

            modelBuilder.Entity("FlightBooking.Domain.Entities.FlightEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AirlineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AirplaneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Arrival")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ArrivingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Departurer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AirlineId");

                    b.HasIndex("AirplaneId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = new Guid("570ed468-e2e6-4434-885b-918b957c1a4e"),
                            AirlineId = new Guid("5d114b2f-3dd0-4798-91b2-480bb3a51ced"),
                            AirplaneId = new Guid("00bbcc7d-784a-4be4-8f92-3cbe95875e8c"),
                            Arrival = "Boston",
                            ArrivingDate = new DateTime(2023, 2, 19, 18, 20, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31",
                            DepartureDate = new DateTime(2023, 2, 17, 22, 15, 0, 0, DateTimeKind.Unspecified),
                            Departurer = "Minsk"
                        },
                        new
                        {
                            Id = new Guid("809a16aa-d678-4c27-8981-0e525d140ba8"),
                            AirlineId = new Guid("5d114b2f-3dd0-4798-91b2-480bb3a51ced"),
                            AirplaneId = new Guid("44033746-83fa-4729-b217-a07cac635358"),
                            Arrival = "Paris",
                            ArrivingDate = new DateTime(2023, 5, 13, 18, 55, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31",
                            DepartureDate = new DateTime(2023, 5, 13, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            Departurer = "Pekin"
                        },
                        new
                        {
                            Id = new Guid("05511a7b-3d32-4e15-8479-0d835486fd9e"),
                            AirlineId = new Guid("078249c5-d887-4e17-966f-bbe1838b36f2"),
                            AirplaneId = new Guid("c4b29207-26bf-4fcf-b082-68013a355703"),
                            Arrival = "Mykonos",
                            ArrivingDate = new DateTime(2023, 3, 23, 11, 15, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31",
                            DepartureDate = new DateTime(2023, 3, 20, 20, 55, 0, 0, DateTimeKind.Unspecified),
                            Departurer = "Singapore"
                        },
                        new
                        {
                            Id = new Guid("1fc32289-4054-4135-891c-38d104c23043"),
                            AirlineId = new Guid("ad13f8da-9fb1-4b78-ae4a-9c5209b9ea8b"),
                            AirplaneId = new Guid("87cad132-b126-4094-8341-c5c4c050a76c"),
                            Arrival = "yaunde",
                            ArrivingDate = new DateTime(2023, 7, 6, 3, 50, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31",
                            DepartureDate = new DateTime(2023, 7, 3, 6, 50, 0, 0, DateTimeKind.Unspecified),
                            Departurer = "frankfurt"
                        });
                });

            modelBuilder.Entity("FlightBooking.Domain.Entities.PersonInformationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Citizenship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpirePasportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("PersonInformations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("feb76b82-21dc-4f8b-9a8d-f230bf702030"),
                            BirthDate = new DateTime(1983, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Citizenship = "Belarus",
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31",
                            ExpirePasportDate = new DateTime(2027, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "М",
                            IdentificationNumber = "2763984J836PB3",
                            Name = "Александр",
                            Surname = "Иванов",
                            UserId = new Guid("0f54863e-733b-47a4-87dd-2fdb494b2cd4")
                        },
                        new
                        {
                            Id = new Guid("b91ac85a-5c34-458c-9629-df48ed67f4a0"),
                            BirthDate = new DateTime(1993, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Citizenship = "America",
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31",
                            ExpirePasportDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "М",
                            IdentificationNumber = "2763984J836PB3",
                            Name = "Владислав",
                            Surname = "Лазарев",
                            UserId = new Guid("997bd07f-65ab-4eca-a95e-3dda96f315de")
                        },
                        new
                        {
                            Id = new Guid("ff731ca0-da40-4c14-9fdf-1e32f6916fab"),
                            BirthDate = new DateTime(1998, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Citizenship = "Poland",
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31",
                            ExpirePasportDate = new DateTime(2025, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Ж",
                            IdentificationNumber = "2763984J836PB3",
                            Name = "Мария",
                            Surname = "Лебедева",
                            UserId = new Guid("40e28ec4-a526-4330-b333-d70627c2d8ef")
                        });
                });

            modelBuilder.Entity("FlightBooking.Domain.Entities.UsersEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0f54863e-733b-47a4-87dd-2fdb494b2cd4"),
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31"
                        },
                        new
                        {
                            Id = new Guid("997bd07f-65ab-4eca-a95e-3dda96f315de"),
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31"
                        },
                        new
                        {
                            Id = new Guid("40e28ec4-a526-4330-b333-d70627c2d8ef"),
                            CreatedDate = "01-13-23",
                            CreatedTime = "11:35:31"
                        });
                });

            modelBuilder.Entity("FlightBooking.Domain.Entities.BoardingPassEntity", b =>
                {
                    b.HasOne("FlightBooking.Domain.Entities.FlightEntity", "Flight")
                        .WithMany("BoardingPasses")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightBooking.Domain.Entities.UsersEntity", "User")
                        .WithMany("BoardingPasses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FlightBooking.Domain.Entities.FlightEntity", b =>
                {
                    b.HasOne("FlightBooking.Domain.Entities.AirlineEntity", "Airlines")
                        .WithMany("Flights")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightBooking.Domain.Entities.AirplaneEntity", "Airplane")
                        .WithMany("Flights")
                        .HasForeignKey("AirplaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airlines");

                    b.Navigation("Airplane");
                });

            modelBuilder.Entity("FlightBooking.Domain.Entities.PersonInformationEntity", b =>
                {
                    b.HasOne("FlightBooking.Domain.Entities.UsersEntity", "User")
                        .WithOne("PersonInformation")
                        .HasForeignKey("FlightBooking.Domain.Entities.PersonInformationEntity", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FlightBooking.Domain.Entities.AirlineEntity", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("FlightBooking.Domain.Entities.AirplaneEntity", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("FlightBooking.Domain.Entities.FlightEntity", b =>
                {
                    b.Navigation("BoardingPasses");
                });

            modelBuilder.Entity("FlightBooking.Domain.Entities.UsersEntity", b =>
                {
                    b.Navigation("BoardingPasses");

                    b.Navigation("PersonInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
